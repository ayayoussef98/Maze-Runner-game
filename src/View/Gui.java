/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Controller.KeyController;
import Model.Bullet;
import Model.Player;
import static com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type.Int;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import sun.audio.AudioPlayer;
import sun.audio.AudioStream;

/**
 *
 * @author Monkia
 */
public class Gui extends javax.swing.JFrame implements ActionListener {

    /**
     * Creates new form Gui
     */
    Timer time = new Timer(1000, this);
    Timer paused = new Timer(1000, this);

    Timer bullet = new Timer(500, this);
   // Player player=new Player();
    int aya=0;
    int count = 0;
    int counter;
    KeyController ck;
     public static int y;
    
    
    public Gui() {
     
       time.setActionCommand("time");
        bullet.setActionCommand("bullet");
        paused.setActionCommand("paused");
        //paused.se
        InputStream music;
        
        try {
            music = new FileInputStream(new File("Avicii - The Nights.wav"));
            AudioStream audios = new AudioStream(music);
            AudioPlayer.player.start(audios);
        } catch (FileNotFoundException ex) {
            // Logger.getLogger(Gui.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println("The music file was not found.");
        } catch (IOException ex) {
            Logger.getLogger(Gui.class.getName()).log(Level.SEVERE, null, ex);
        }
        initComponents();
      //  bullet.start();
        time.start();
     
        
           ck = new KeyController(panel1);
        this.addKeyListener(ck);
    }
    Player p = Player.getInstance();
    public static Thread th = new Thread();
    Bullet b ;
   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel1 = new View.Panel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        TimeLbl = new javax.swing.JLabel();
        score = new javax.swing.JLabel();
        bullets = new javax.swing.JLabel();
        lives = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        panel1.setPreferredSize(new java.awt.Dimension(300, 300));

        jLabel2.setText("Score:");

        jLabel3.setText("Bullets:");

        jLabel4.setText("Life:");

        jLabel5.setText("Time:");

        TimeLbl.setText("0");

        score.setText("jhj");

        bullets.setText("jLabel1");

        lives.setText("jLabel1");

        javax.swing.GroupLayout panel1Layout = new javax.swing.GroupLayout(panel1);
        panel1.setLayout(panel1Layout);
        panel1Layout.setHorizontalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(panel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(score)
                        .addGap(40, 40, 40)
                        .addComponent(jLabel4))
                    .addGroup(panel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(bullets)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5)))
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(TimeLbl))
                    .addGroup(panel1Layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(lives)))
                .addContainerGap(111, Short.MAX_VALUE))
        );
        panel1Layout.setVerticalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel1Layout.createSequentialGroup()
                .addContainerGap(223, Short.MAX_VALUE)
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4)
                    .addComponent(score)
                    .addComponent(lives))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel5)
                    .addComponent(TimeLbl)
                    .addComponent(bullets))
                .addGap(38, 38, 38))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        // TODO add your handling code here:
//        if (evt.getKeyCode() == KeyEvent.VK_RIGHT) {
//            if (p.getLives() == 0) {
//                Panel.mode = 1;
//            } else {
//                panel1.moveRight();
//            }
//        }
//        if (evt.getKeyCode() == KeyEvent.VK_LEFT) {
//            if (p.getLives() == 0) {
//                Panel.mode = 2;
//            } else {
//                panel1.moveLeft();
//            }
//        }
//        
//        if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
//            if (p.getLives() == 0) {
//                Panel.mode = 3;
//            } else {
//                panel1.moveDown();
//            }
//        }
//        
//        if (evt.getKeyCode() == KeyEvent.VK_UP) {
//            if (p.getLives() == 4) {
//                Panel.mode = 3;
//            } else {
//                panel1.moveUp();
//            }
//        }
//        if (evt.getKeyCode() == KeyEvent.VK_SPACE) {
//            panel1.remove();
//            
//        }
    }//GEN-LAST:event_formKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws InterruptedException {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        /*try {
         for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
         if ("Nimbus".equals(info.getName())) {
         javax.swing.UIManager.setLookAndFeel(info.getClassName());
         break;

         }
         }
         } catch (ClassNotFoundException ex) {
         java.util.logging.Logger.getLogger(Gui.class
         .getName()).log(java.util.logging.Level.SEVERE, null, ex);
         } catch (InstantiationException ex) {
         java.util.logging.Logger.getLogger(Gui.class
         .getName()).log(java.util.logging.Level.SEVERE, null, ex);
         } catch (IllegalAccessException ex) {
         java.util.logging.Logger.getLogger(Gui.class
         .getName()).log(java.util.logging.Level.SEVERE, null, ex);
         } catch (javax.swing.UnsupportedLookAndFeelException ex) {
         java.util.logging.Logger.getLogger(Gui.class
         .getName()).log(java.util.logging.Level.SEVERE, null, ex);
         }
         //</editor-fold>

         /* Create and display the form */
//          for(int T=0;T<200;T++)
//        {
//            th.sleep(1000);
//            time.setText(String.valueOf(T));
//        }
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Gui().setVisible(true);
            }
        });
    }
    
//   public void setLabel(String newValue)
//{
//   score.setText(newValue);
//}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel TimeLbl;
    private javax.swing.JLabel bullets;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel lives;
    private View.Panel panel1;
    private javax.swing.JLabel score;
    // End of variables declaration//GEN-END:variables

    @Override
    public void actionPerformed(ActionEvent e) {
  if (e.getActionCommand().equals("time")) {
            TimeLbl.setText(Integer.parseInt(TimeLbl.getText()) + 1 + "");
            y=Integer.parseInt(TimeLbl.getText());
            count++;
            score.setText((int) p.getScore() + "");
            lives.setText((int) p.getLives() + "");
            bullets.setText((int) p.getNumberOfBullets() + "");
            if (p.getxPlayer()==29&&p.getyPlayer()==29) {
                time.stop();  
            }
            if(p.getLives()==0)
            {
                time.stop();
            }
            if(KeyController.pause==true){
                time.stop();
               aya= Integer.parseInt(TimeLbl.getText());
            }
//            if(KeyController.ahmed==true){
//                time.start();
//               // TimeLbl.setText(Integer.parseInt(TimeLbl.getText())+aya) + 1+ "");
//            }
//            else if(p.getxPlayer()==0&&p.getyPlayer()==0){
//                time.stop();
//                time.start();
//            }
            //System.out.println(p.getxPlayer());
         //   score.setText((int) p.getScore() + "");
            
            if(KeyController.ahmed==true){
                System.out.println("aya");
                time.restart();
             TimeLbl.setText(aya+ Integer.parseInt(TimeLbl.getText())+ 1 + "");
      }}
//  else {
//      System.out.println("aya");
//      //if(KeyController.ahmed==true){
//                //paused.start();
//                TimeLbl.setText((aya) + 1 + "");
//                 score.setText((int) p.getScore() + "");
//            lives.setText((int) p.getLives() + "");
//            bullets.setText((int) p.getNumberOfBullets() + "");
//                
//              // TimeLbl.setText(Integer.parseInt(TimeLbl.getText())+aya) + 1+ "");
//  }
  }}

